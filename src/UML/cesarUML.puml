@startuml cesar
skinparam groupInheritance 2
' El constructor recibe 
'   - Una llave que son dos carácteres en un array estático
'   - El texto que se va a cifrar
' Cuenta con un método propio que debe
'   - Realizar el proceso del cifrador César para los carácteres 
'     dentro del texto este se va a cifrar con la llave determinada por un usuario,
' - Para obtener el texto es necesario llamar al método de clase readFile
' - El texto puede contener carácteres especiales por lo que deben de quedar como tal,
'   es decir sí se encuentra un carácter especial no hacerle ninguna transformación.
' - Para una mayor simplicidad el texto será tratado en minúsculas
' - Ademas la clase cuenta con la interfaz de una implementacion de desencriptar  
class Caesar{
  - text : String
  -key : char[2]
  +String cipher(String text)
}

' El constructor recibe
'   - El texto encriptado para su posible desencriptación
' Cuenta con dos métodos propios que deben hacer
'   - El método createRandomKey tiene la labor de crear una llave de forma aleatoria
'     que será usada en el siguiente método muchas veces
'   - El método getTextsProbable usa diferentes llaves para intentar desencriptar el texto pasado, 
'     pero este usará dos de sus enumeraciones para establecer que el texto es cohérente en el idioma
'     dado en este caso especifico inglés
class CaesarAttack{
  -text : String
  -char[2] : createRandomKey()
  +String[] getTextsProbable()
}

' La interfaz debe ser implemetada en los Caesar
' Tiene un método que debe decifrar a partir de los párametros que son
'   - un texto encriptado 
'   - una llave para poder tener idea de como desencriptar 
interface Desencrypter{
  +String descipher(String textEncrypted, char[2] key)
}

' Una clase que se encarga de las operaciones sobre archivos, en este caso solo escritura y lectura
class FileService {
  + static String readFile(String path)
  + static void writeTxt(String path, String text)
}

' Una enumeración de tres de los siete tipos de pronombres del inglés
enum Pronouns{
  'Personals
  I
  YOU
  WE
  THEY
  HE
  SHE
  IT
  'Object
  ME
  HIM
  HER
  US
  THEM
  'Posessive
  MINE
  YOURS
  HIS
  HERS
  OURS
  THEIRS
}

' Una enumeración con los verbos auxiliares del presente, pasado y futuro usados en inglés
enum VerbsAuxiliars{
  IS
  ARE
  AM
  WAS
  WERE
  WILL
}

Desencrypter <|-- Caesar
Desencrypter <|-- CaesarAttack

' FileService *-down- Caesar
' FileService *-down- CaesarAttack
Caesar -down-* FileService
CaesarAttack -down-* FileService

' Pronouns *-down- CaesarAttack
CaesarAttack -down-* Pronouns
VerbsAuxiliars *-left- CaesarAttack
@enduml